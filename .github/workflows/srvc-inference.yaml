name: srvc-inference

on:
  push:
    branches: ["**"]
    paths:
      - "apps/srvc-inference/**"
    tags:
      - "srvc-inference-*-v*.*.*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/srvc-inference

jobs:
  lint:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install lint tools
        run: |
          pip install ruff black mypy bandit

      - name: Run Ruff (lint + fix)
        run: ruff check . --fix
        working-directory: ./apps/srvc-inference

      - name: Run Black (format check)
        run: black --check .
        working-directory: ./apps/srvc-inference

      - name: Run mypy (type check)
        run: mypy .
        working-directory: ./apps/srvc-inference

      - name: Run Bandit (security check)
        run: bandit -r .
        working-directory: ./apps/srvc-inference

  test:
    if: github.event_name == 'push'
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest
        working-directory: ./apps/srvc-inference

      - name: Run tests
        run: pytest -v
        working-directory: ./apps/srvc-inference

  build-docker:
    if: startsWith(github.ref, 'refs/tags/srvc-inference-')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Extract model name from tag
        id: extract
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          MODEL=$(echo "$TAG" | sed -E 's/^srvc-inference-([a-zA-Z0-9_-]+)-v[0-9]+\.[0-9]+\.[0-9]+$/\1/')
          echo "MODEL=$MODEL" >> $GITHUB_ENV
          echo "Model detected: $MODEL"

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: "v2.2.4"

      - uses: docker/setup-buildx-action@v3

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag,pattern=srvc-inference-${{ env.MODEL }}-v{{version}}
            type=sha

      - id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./apps/srvc-inference/${{ env.MODEL }}
          file: ./docker/srvc-inference.Dockerfile
          build-args: |
            MODEL_NAME=${{ env.MODEL }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
