services:
  # Redpanda Kafka-compatible Broker
  redpanda:
    container_name: redpanda
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.7
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr localhost:8082
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9644:9644"
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    networks:
      - recommendation-network
    healthcheck:
      test: ["CMD", "rpk", "topic", "list", "--brokers", "redpanda:29092"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - recommendation-network
    healthcheck:
      test:
        - CMD-SHELL
        - bash -c ':> /dev/tcp/127.0.0.1/6333' || exit 1
      interval: 5s
      timeout: 5s
      retries: 3

  # Article Consumer Service
  article-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: article-consumer
    depends_on:
      redpanda:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    volumes:
      - ../../data:/app/data:ro
    environment:
      - QDRANT_URL=http://qdrant:6333
      - KAFKA_BOOTSTRAP_SERVERS=redpanda:29092
      - BATCH_SIZE=50
      - BATCH_INTERVAL=2
      - TFIDF_MAX_FEATURES=512
      - CSV_DATA_PATH=/app/data/news_cleaned.csv
    restart: unless-stopped
    env_file: ".env"
    networks:
      - recommendation-network

volumes:
  qdrant_storage:
    driver: local
  redpanda_data:

networks:
  recommendation-network:
    driver: bridge
